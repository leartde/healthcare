import React, { useEffect, useState } from 'react';
import { useParams } from "react-router";
import type { ClinicalRecord } from "../Types/ClinicalRecord.ts";
import FetchClinicalRecord from "../Services/ClinicalRecord/FetchClinicalRecord.ts";

const ClinicalRecord = () => {
  const {id} = useParams();
  const [record, setRecord] = useState<ClinicalRecord >();
  const [loading, setLoading] = useState(true);
  useEffect(() => {
    const getRecord = async()=>{
      const data = await FetchClinicalRecord(Number(id));
      setRecord(data);
      setLoading(false);
    }
    getRecord().then();
  }, [id]);
  if (loading) {
    return (
      <div className="flex justify-center items-center h-64">
        <div className="text-green-600 text-lg">Loading record...</div>
      </div>
    );
  }
  return (
    <>
      <div className="bg-gray-200/60 rounded-md p-4 border border-gray-900/80 border-shadow-md">
        <p className="text-gray-800 italic bold">
          This prediction was automatically generated by a machine learning model
          using the SDCA Logistic Regression algorithm.
          Please note that this result may not be fully accurate â€” a licensed doctor
          has the final say in diagnosis and treatment decisions.
        </p>
      </div>

      <table className="w-full mt-2 border-collapse border border-gray-200 rounded-lg shadow-sm">
        <thead className="bg-gray-50">
        <tr>
          <th className="py-3 px-4 text-left font-semibold text-gray-700 border-b">Clinical Parameter</th>
          <th className="py-3 px-4 text-left font-semibold text-gray-700 border-b">Value</th>
        </tr>
        </thead>

        <tbody>
        <tr className="border-b border-gray-100">
          <td className="py-3 px-4 font-medium text-gray-600">Chest pain type</td>
          <td className="py-3 px-4 text-gray-900">{record?.chestPainType}</td>
        </tr>

        <tr className="border-b border-gray-100">
          <td className="py-3 px-4 font-medium text-gray-600">Resting blood pressure</td>
          <td className="py-3 px-4 text-gray-900">{record?.restingBloodPressure}</td>
        </tr>

        <tr className="border-b border-gray-100">
          <td className="py-3 px-4 font-medium text-gray-600">Cholesterol total</td>
          <td className="py-3 px-4 text-gray-900">{record?.cholesterolTotal}</td>
        </tr>

        <tr className="border-b border-gray-100">
          <td className="py-3 px-4 font-medium text-gray-600">Fasting blood sugar &gt;120 mg/dL</td>
          <td className="py-3 px-4 text-gray-900">{record?.fastingBloodSugar ? 'True' : 'False'}</td>
        </tr>

        <tr className="border-b border-gray-100">
          <td className="py-3 px-4 font-medium text-gray-600">Rest ECG</td>
          <td className="py-3 px-4 text-gray-900">{record?.restEcg}</td>
        </tr>

        <tr className="border-b border-gray-100">
          <td className="py-3 px-4 font-medium text-gray-600">Maximum heart rate</td>
          <td className="py-3 px-4 text-gray-900">{record?.maximumHeartRate}</td>
        </tr>

        <tr className="border-b border-gray-100">
          <td className="py-3 px-4 font-medium text-gray-600">Exercise induced angina</td>
          <td
            className="py-3 px-4 text-gray-900">{record?.exerciseInducedAngina ? 'True' : 'False'}</td>
        </tr>

        <tr className="border-b border-gray-100">
          <td className="py-3 px-4 font-medium text-gray-600">Old peak</td>
          <td className="py-3 px-4 text-gray-900">{record?.oldPeak}</td>
        </tr>

        <tr className="border-b border-gray-100">
          <td className="py-3 px-4 font-medium text-gray-600">Slope</td>
          <td className="py-3 px-4 text-gray-900">{record?.slope}</td>
        </tr>

        <tr className="border-b border-gray-100">
          <td className="py-3 px-4 font-medium text-gray-600">Nr of major vessels colored</td>
          <td className="py-3 px-4 text-gray-900">{record?.majorVesselsColored}</td>
        </tr>

        <tr className="border-b border-gray-100">
          <td className="py-3 px-4 font-medium text-gray-600">Thalassemia</td>
          <td className="py-3 px-4 text-gray-900">{record?.thalassemia}</td>
        </tr>

        <tr className="border-b border-gray-100 bg-gray-50">
          <td className="py-3 px-4 font-semibold text-gray-700">Label</td>
          <td className="py-3 px-4 font-semibold text-gray-900">{record?.label ? 'True' : 'False'}</td>
        </tr>

        <tr className="border-b border-gray-100 bg-gray-50">
          <td className="py-3 px-4 font-semibold text-gray-700">Predicted disease probability</td>
          <td className="py-3 px-4 font-semibold text-gray-900">{record?.probability.toFixed(2) * 100}%</td>
        </tr>

        <tr>
          <td className="py-3 px-4 font-medium text-gray-600">Recorded at</td>
          <td className="py-3 px-4 text-gray-900">{new Date(record!.recordedDate).toLocaleDateString()}</td>
        </tr>
        </tbody>
      </table>
    </>
  );
};

export default ClinicalRecord;
